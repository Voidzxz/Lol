local ReplicatedStorage = game:GetService("ReplicatedStorage")
local AimAssistEvent = ReplicatedStorage:FindFirstChild("AimAssistEvent")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local aimAssistEnabled = false
local player = game.Players.LocalPlayer
local mouse = player:GetMouse()

-- Detect a target using Raycasting
local function getTarget()
    local ray = Ray.new(mouse.Origin, mouse.UnitRay.Direction * 100)
    local target, position = workspace:FindPartOnRay(ray, player.Character)

    if target and target.Parent:IsA("Model") then
        return target.Parent
    end
    return nil
end

-- Smoothly adjust aim toward the target
local function smoothAim(target)
    if target then
        local cam = workspace.CurrentCamera
        local targetCFrame = CFrame.new(cam.CFrame.Position, target.PrimaryPart.Position)
        local tween = TweenService:Create(cam, TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {CFrame = targetCFrame})
        tween:Play()
    end
end

-- Enable aim assist while holding Mouse X2
UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton4 then
        aimAssistEnabled = true
        print("Aim Assist: Enabled")
    end
end)

-- Disable aim assist when Mouse X2 is released
UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton4 then
        aimAssistEnabled = false
        print("Aim Assist: Disabled")
    end
end)

-- Continuously check for targets and adjust aim
game:GetService("RunService").RenderStepped:Connect(function()
    if aimAssistEnabled then
        local target = getTarget()
        if target then
            smoothAim(target)
        end
    end
end)

-- Listen for the event from the server to activate aim assist
if AimAssistEvent then
    AimAssistEvent.OnClientEvent:Connect(function()
        print("Server triggered aim assist")
    end)
end
