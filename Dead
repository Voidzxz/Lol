local player = game.Players.LocalPlayer
local mouse = player:GetMouse()
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local aimAssistEnabled = false

-- Function to detect a target using raycasting
local function getTarget()
    local ray = Ray.new(mouse.Origin, mouse.UnitRay.Direction * 100) -- Extend the ray
    local target, position = workspace:FindPartOnRay(ray, player.Character)

    if target and target.Parent:IsA("Model") then
        return target.Parent -- Assume it's a player/enemy
    end
    return nil
end

-- Function to smoothly adjust aim toward the target
local function smoothAim(target)
    if target then
        local cam = workspace.CurrentCamera
        local targetCFrame = CFrame.new(cam.CFrame.Position, target.PrimaryPart.Position)
        local tween = TweenService:Create(cam, TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {CFrame = targetCFrame})
        tween:Play()
    end
end

-- Activate aim assist while holding Mouse X2 (MouseButton4)
UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton4 then
        aimAssistEnabled = true
        print("Aim Assist: Enabled")
    end
end)

-- Disable aim assist when Mouse X2 (MouseButton4) is released
UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton4 then
        aimAssistEnabled = false
        print("Aim Assist: Disabled")
    end
end)

-- Continuously check for targets and adjust aim if enabled
game:GetService("RunService").RenderStepped:Connect(function()
    if aimAssistEnabled then
        local target = getTarget()
        if target then
            smoothAim(target)
        end
    end
end)
